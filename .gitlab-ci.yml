variables:
  SPACK_REPO: https://github.com/spack/spack.git
stages:
  - check
  - generate
  - build
  - approve
  - deploy

.copy_muller_settings: &copy_muller_settings
  - mkdir -p /global/common/software/spackecp/muller/spack_settings
  - cp settings/muller/* /global/common/software/spackecp/muller/spack_settings/

.copy_perlmutter_settings: &copy_perlmutter_settings
  - mkdir -p /global/common/software/spackecp/perlmutter/spack_settings
  - cp settings/perlmutter/packages.yaml /global/common/software/spackecp/perlmutter/spack_settings/packages.yaml
  - cp settings/perlmutter/compilers.yaml /global/common/software/spackecp/perlmutter/spack_settings/compilers.yaml

.startup_modules: &startup_modules
  - module reset
  - module load cpu
  # need to load cray-pmi since its not loaded by default and required for upcxx. See https://software.nersc.gov/NERSC/spack-infrastructure/-/issues/37
  - module load cray-pmi
  - module list

.spack_setup: &spack_setup
  - source setup-env.sh
  # need to pre-create this directory apparently spack ci doesn't create this automatically
  #- mkdir -p /global/common/software/spackecp/mirrors/perlmutter-e4s-23.05/build_cache/_pgp
  - git clone -c feature.manyFiles=true -b e4s-${version} $SPACK_REPO  
  - . spack/share/spack/setup-env.sh
  - spack --version
  - spack-python --path
  - export SPACK_GNUPGHOME=$HOME/.gnupg


perlmutter:check_spack_dependencies:
  stage: check
  tags: [perlmutter-e4s]
  allow_failure: false
  rules:
    - if: ($CI_PIPELINE_SOURCE == "merge_request_event" || $CI_PIPELINE_SOURCE == "web" || $CI_PIPELINE_SOURCE == "schedule")
  when: always
  script:
    - export
    - bash check_spack_dependencies.sh

muller:check_spack_dependencies:
  stage: check
  tags: [muller-e4s]
  allow_failure: false
  rules:
    - if: ($CI_PIPELINE_SOURCE == "merge_request_event" || $CI_PIPELINE_SOURCE == "web" || $CI_PIPELINE_SOURCE == "schedule")
  when: always
  script:
    - bash check_spack_dependencies.sh

spack_training_check:
  stage: build
  tags: [perlmutter-e4s]
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "SPACK_TRAINING")
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
      - docs/spack_training.rst
  script:
    - cd $CI_PROJECT_DIR
    - source setup-env.sh
    - git clone -b e4s-22.05 https://github.com/spack/spack.git
    - source spack/share/spack/setup-env.sh
    - spack --version
    - echo $SPACK_PYTHON
    - spack-python --path
    - spack env create data_viz $CI_PROJECT_DIR/docs/spack.yaml
    - spack env activate data_viz
    - spack env st
    - spack compiler list
    - spack providers
    - spack providers mpi
    - spack concretize
    - set +e
    - spack install
    - set -e
    - spack find
    - spack mirror create -d $CI_PROJECT_DIR/spack_mirror -a
    - ls -l $CI_PROJECT_DIR/spack_mirror/*
    - spack -d module tcl refresh --delete-tree -y
    - ls -l $HOME/spack-infrastructure/modules/$(spack arch)/*
    - module use $HOME/spack-infrastructure/modules/$(spack arch)
    - ml av

perlmutter-spack-develop-ci-generate:
  stage: generate
  needs: ["perlmutter:check_spack_dependencies"]
  tags: [perlmutter-e4s]
  interruptible: true
  rules:
  - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "PERLMUTTER_SPACK_DEVELOP")
    allow_failure: true
  - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    changes:
    - spack-configs/perlmutter-spack-develop/spack.yaml
    allow_failure: true
  before_script:
  - *copy_perlmutter_settings
  - *startup_modules
  script:
  - export PERLMUTTER_SPACK_BUILDCACHE=/global/common/software/spackecp/mirrors/perlmutter-spack-develop/
  - source setup-env.sh
  - git clone --depth=10 $SPACK_REPO
  - . spack/share/spack/setup-env.sh
  - export SPACK_GNUPGHOME=$HOME/.gnupg
  - cd $CI_PROJECT_DIR/spack-configs/perlmutter-spack-develop
  - spack env activate --without-view .
  - spack ci generate --check-index-only --buildcache-destination "${PERLMUTTER_SPACK_BUILDCACHE}" --artifacts-root "$CI_PROJECT_DIR/jobs_scratch_dir" --output-file "${CI_PROJECT_DIR}/jobs_scratch_dir/pipeline.yml"
  artifacts:
    paths:
    - ${CI_PROJECT_DIR}/jobs_scratch_dir

perlmutter-base:
  stage: build
  needs: ["perlmutter:check_spack_dependencies"]
  tags: [perlmutter-e4s]
  rules:
  - if: ($CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "PERLMUTTER_BASE")
  - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    changes:
    - spack-configs/base/spack.yaml
  script:
  -  source setup-env.sh
  -  spack_root=/global/common/software/spackecp/perlmutter/base/$CI_PIPELINE_ID
  -  mkdir -p $spack_root
  -  cd $spack_root
  -  git clone -c feature.manyFiles=true -b releases/v0.21 $SPACK_REPO
  -  . spack/share/spack/setup-env.sh
  -  spack-python --path
  - spack env create base $CI_PROJECT_DIR/spack-configs/base/spack.yaml
  - spack env activate base
  - spack env st
  - EDITOR=true spack checksum -a openmpi 5.0.0
  - spack install -j8 gcc@13.2.0%gcc@7.5.0 gcc@12.3.0%gcc@7.5.0
  - spack load gcc@13.2.0 gcc@12.3.0
  - spack compiler add 
  - spack compiler list
  - spack unload -a 
  - spack concretize -f
  - spack env depfile -o Makefile
  - make -j128
  - spack module lmod refresh --delete-tree -y

perlmutter-spack-develop-ci-build:
  stage: build
  needs: ["perlmutter:check_spack_dependencies", "perlmutter-spack-develop-ci-generate"]
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "PERLMUTTER_SPACK_DEVELOP")
      allow_failure: true
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
      - spack-configs/perlmutter-spack-develop/spack.yaml
      allow_failure: true
  trigger:
    include:
      - artifact: jobs_scratch_dir/pipeline.yml
        job: perlmutter-spack-develop-ci-generate
    strategy: depend


# Template Jobs for spack ci generate

.perlmutter-e4s-23.08-generate:
  stage: generate
  needs: ["perlmutter:check_spack_dependencies"]
  tags: [perlmutter-e4s]
  variables:
    version: "23.08"
  retry: 
    max: 2
    when:
      - runner_system_failure
      - stuck_or_timeout_failure
      - script_failure
  interruptible: true
  allow_failure: true
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "PERLMUTTER_E4S_23.08")
    - if: ($CI_PIPELINE_SOURCE == "merge_request_event")
      changes:
      - spack-configs/perlmutter-e4s-${version}/$STACK_NAME/spack.yaml
      - spack-configs/perlmutter-e4s-${version}/definitions.yaml
  before_script:
    - *copy_perlmutter_settings
    - *startup_modules
  script:    
    - *spack_setup 
    - cd $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-${version}/$STACK_NAME
    - cat $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-${version}/definitions.yaml >> spack.yaml
    - spack env activate --without-view  .
    - spack env st
    #- spack -d concretize -f | tee $CI_PROJECT_DIR/concretize.log    
    - spack -d ci generate --check-index-only --artifacts-root "$CI_PROJECT_DIR/jobs_scratch_dir" --output-file "${CI_PROJECT_DIR}/jobs_scratch_dir/pipeline.yml"
  artifacts: 
    paths:
    - ${CI_PROJECT_DIR}/jobs_scratch_dir

.perlmutter-e4s-23.05-generate:
  stage: generate
  needs: ["perlmutter:check_spack_dependencies"]
  tags: [perlmutter-e4s]
  variables:
    version: "23.05"
  retry: 
    max: 2
    when:
      - runner_system_failure
      - stuck_or_timeout_failure
      - script_failure
  interruptible: true
  allow_failure: true
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "PERLMUTTER_E4S_23.05")
    - if: ($CI_PIPELINE_SOURCE == "merge_request_event")
      changes:
      - spack-configs/perlmutter-e4s-${version}/$STACK_NAME/spack.yaml
      - spack-configs/perlmutter-e4s-${version}/definitions.yaml
  before_script:
    - *copy_perlmutter_settings
    - *startup_modules
  script:    
    - *spack_setup 
    - cd $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-${version}/$STACK_NAME
    - cat $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-${version}/definitions.yaml >> spack.yaml
    - spack env activate --without-view  .
    - spack env st
    #- spack -d concretize -f | tee $CI_PROJECT_DIR/concretize.log    
    - spack -d ci generate --check-index-only --artifacts-root "$CI_PROJECT_DIR/jobs_scratch_dir" --output-file "${CI_PROJECT_DIR}/jobs_scratch_dir/pipeline.yml"
  artifacts: 
    paths:
    - ${CI_PROJECT_DIR}/jobs_scratch_dir


.perlmutter-e4s-22.11-generate:
  stage: generate
  needs: ["perlmutter:check_spack_dependencies"]
  tags: [perlmutter-e4s]  
  interruptible: true
  allow_failure: true
  retry: 
    max: 2
    when:
      - runner_system_failure
      - stuck_or_timeout_failure
      - script_failure
  variables:
    version: "22.11"
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "PERLMUTTER_E4S_22.11")
    - if: ($CI_PIPELINE_SOURCE == "merge_request_event")
      changes:
      - spack-configs/perlmutter-e4s-${version}/$STACK_NAME/spack.yaml
      - spack-configs/perlmutter-e4s-${version}/definitions.yaml
  before_script:
    - *copy_perlmutter_settings
    - *startup_modules
  script:
    - *spack_setup
    - cd $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-${version}/$STACK_NAME
    - cat $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-${version}/definitions.yaml >> spack.yaml
    - spack env activate --without-view  .
    - spack env st
    #- spack -d concretize -f | tee $CI_PROJECT_DIR/concretize.log    
    - spack -d ci generate --check-index-only --artifacts-root "$CI_PROJECT_DIR/jobs_scratch_dir" --output-file "${CI_PROJECT_DIR}/jobs_scratch_dir/pipeline.yml"
  artifacts: 
    paths:
    - ${CI_PROJECT_DIR}/jobs_scratch_dir

# ----------- E4S 23.08 ------------ #

perlmutter-e4s-23.08-gcc-generate:
  extends: .perlmutter-e4s-23.08-generate
  variables:
    STACK_NAME: gcc

perlmutter-e4s-23.08-cce-generate:
  extends: .perlmutter-e4s-23.08-generate
  variables:
    STACK_NAME: cce

perlmutter-e4s-23.08-nvhpc-generate:
  extends: .perlmutter-e4s-23.08-generate
  variables:
    STACK_NAME: nvhpc

perlmutter-e4s-23.08-cuda-generate:
  extends: .perlmutter-e4s-23.08-generate
  variables:
    STACK_NAME: cuda

perlmutter-e4s-23.08-gcc-build:
  stage: build
  needs: ["perlmutter:check_spack_dependencies", "perlmutter-e4s-23.08-gcc-generate"]  
  allow_failure: true
  variables:
    version: "23.08"
    STACK_NAME: "gcc"
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "PERLMUTTER_E4S_23.08")
    - if: ($CI_PIPELINE_SOURCE == "merge_request_event")
      changes:
      - spack-configs/perlmutter-e4s-${version}/${STACK_NAME}/spack.yaml
      - spack-configs/perlmutter-e4s-${version}/definitions.yaml
  trigger:
    include:
      - artifact: jobs_scratch_dir/pipeline.yml
        job: perlmutter-e4s-23.08-gcc-generate
    strategy: depend

perlmutter-e4s-23.08-cce-build:
  stage: build
  needs: ["perlmutter:check_spack_dependencies", "perlmutter-e4s-23.08-cce-generate"]  
  allow_failure: true
  variables:
    version: "23.08"
    STACK_NAME: "cce"
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "PERLMUTTER_E4S_23.08")
    - if: ($CI_PIPELINE_SOURCE == "merge_request_event")
      changes:
      - spack-configs/perlmutter-e4s-${version}/${STACK_NAME}/spack.yaml
      - spack-configs/perlmutter-e4s-${version}/definitions.yaml
  trigger:
    include:
      - artifact: jobs_scratch_dir/pipeline.yml
        job: perlmutter-e4s-23.08-cce-generate
    strategy: depend

perlmutter-e4s-23.08-nvhpc-build:
  stage: build
  needs: ["perlmutter:check_spack_dependencies", "perlmutter-e4s-23.08-nvhpc-generate"]  
  allow_failure: true
  variables:
    version: "23.08"
    STACK_NAME: "nvhpc"
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "PERLMUTTER_E4S_23.08")
    - if: ($CI_PIPELINE_SOURCE == "merge_request_event")
      changes:
      - spack-configs/perlmutter-e4s-${version}/${STACK_NAME}/spack.yaml
      - spack-configs/perlmutter-e4s-${version}/definitions.yaml
  trigger:
    include:
      - artifact: jobs_scratch_dir/pipeline.yml
        job: perlmutter-e4s-23.08-nvhpc-generate
    strategy: depend

perlmutter-e4s-23.08-cuda-build:
  stage: build
  needs: ["perlmutter:check_spack_dependencies", "perlmutter-e4s-23.08-cuda-generate"]  
  allow_failure: true
  variables:
    version: "23.08"
    STACK_NAME: "cuda"
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "PERLMUTTER_E4S_23.08")
    - if: ($CI_PIPELINE_SOURCE == "merge_request_event")
      changes:
      - spack-configs/perlmutter-e4s-${version}/${STACK_NAME}/spack.yaml
      - spack-configs/perlmutter-e4s-${version}/definitions.yaml
  trigger:
    include:
      - artifact: jobs_scratch_dir/pipeline.yml
        job: perlmutter-e4s-23.08-cuda-generate
    strategy: depend

# ----------- E4S 23.05 ------------ #

perlmutter-e4s-23.05-cce-generate:
  extends: .perlmutter-e4s-23.05-generate
  variables:
    STACK_NAME: cce

perlmutter-e4s-23.05-gcc-generate:
  extends: .perlmutter-e4s-23.05-generate
  variables:
    STACK_NAME: gcc

perlmutter-e4s-23.05-cuda-generate:
  extends: .perlmutter-e4s-23.05-generate
  variables:
    STACK_NAME: cuda

perlmutter-e4s-23.05-nvhpc-generate:
  extends: .perlmutter-e4s-23.05-generate
  variables:
    STACK_NAME: nvhpc

perlmutter-e4s-23.05-data-generate:
  extends: .perlmutter-e4s-23.05-generate
  variables:
    STACK_NAME: data

perlmutter-e4s-23.05-mathlibs-generate:
  extends: .perlmutter-e4s-23.05-generate
  variables:
    STACK_NAME: math-libs

perlmutter-e4s-23.05-tools-generate:
  extends: .perlmutter-e4s-23.05-generate
  variables:
    STACK_NAME: tools

perlmutter-e4s-23.05-gcc-build:
  stage: build
  needs: ["perlmutter:check_spack_dependencies", "perlmutter-e4s-23.05-gcc-generate"]  
  allow_failure: true
  variables:
    version: "23.05"
    STACK_NAME: "gcc"
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "PERLMUTTER_E4S_23.05")
    - if: ($CI_PIPELINE_SOURCE == "merge_request_event")
      changes:
      - spack-configs/perlmutter-e4s-${version}/${STACK_NAME}/spack.yaml
      - spack-configs/perlmutter-e4s-${version}/definitions.yaml
  trigger:
    include:
      - artifact: jobs_scratch_dir/pipeline.yml
        job: perlmutter-e4s-23.05-gcc-generate
    strategy: depend

perlmutter-e4s-23.05-cce-build:
  stage: build
  needs: ["perlmutter:check_spack_dependencies", "perlmutter-e4s-23.05-cce-generate"]
  allow_failure: true
  variables:
    version: "23.05"
    STACK_NAME: "cce"
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "PERLMUTTER_E4S_23.05")
    - if: ($CI_PIPELINE_SOURCE == "merge_request_event")
      changes:
      - spack-configs/perlmutter-e4s-${version}/${STACK_NAME}/spack.yaml
      - spack-configs/perlmutter-e4s-${version}/definitions.yaml
  trigger:
    include:
      - artifact: jobs_scratch_dir/pipeline.yml
        job: perlmutter-e4s-23.05-cce-generate
    strategy: depend

perlmutter-e4s-23.05-nvhpc-build:
  stage: build
  needs: ["perlmutter:check_spack_dependencies", "perlmutter-e4s-23.05-nvhpc-generate"]
  allow_failure: true
  variables:
    version: "23.05"
    STACK_NAME: "nvhpc"
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "PERLMUTTER_E4S_23.05")
    - if: ($CI_PIPELINE_SOURCE == "merge_request_event")
      changes:
      - spack-configs/perlmutter-e4s-${version}/${STACK_NAME}/spack.yaml 
      - spack-configs/perlmutter-e4s-${version}/definitions.yaml
  trigger:
    include:
      - artifact: jobs_scratch_dir/pipeline.yml
        job: perlmutter-e4s-23.05-nvhpc-generate
    strategy: depend

perlmutter-e4s-23.05-cuda-build:
  stage: build
  needs: ["perlmutter:check_spack_dependencies", "perlmutter-e4s-23.05-cuda-generate"]
  allow_failure: true
  variables:
    version: "23.05"
    STACK_NAME: "cuda"
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "PERLMUTTER_E4S_23.05")
    - if: ($CI_PIPELINE_SOURCE == "merge_request_event")
      changes:
      - spack-configs/perlmutter-e4s-${version}/${STACK_NAME}/spack.yaml
      - spack-configs/perlmutter-e4s-${version}/definitions.yaml
  trigger:
    include:
      - artifact: jobs_scratch_dir/pipeline.yml
        job: perlmutter-e4s-23.05-cuda-generate
    strategy: depend
    
perlmutter-e4s-23.05-mathlibs-build:
  stage: build
  needs: ["perlmutter:check_spack_dependencies", "perlmutter-e4s-23.05-mathlibs-generate"]
  allow_failure: true
  variables:
    version: "23.05"
    STACK_NAME: "math-libs"
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "PERLMUTTER_E4S_23.05")
    - if: ($CI_PIPELINE_SOURCE == "merge_request_event")
      changes:
        - spack-configs/perlmutter-e4s-${version}/${STACK_NAME}/spack.yaml
        - spack-configs/perlmutter-e4s-${version}/definitions.yaml
  trigger:
    include:
      - artifact: jobs_scratch_dir/pipeline.yml
        job: perlmutter-e4s-23.05-mathlibs-generate
    strategy: depend


perlmutter-e4s-23.05-data-build:
  stage: build
  needs: ["perlmutter:check_spack_dependencies", "perlmutter-e4s-23.05-data-generate"]
  allow_failure: true
  variables:
    version: "23.05"
    STACK_NAME: "data"
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "PERLMUTTER_E4S_23.05")
    - if: ($CI_PIPELINE_SOURCE == "merge_request_event")
      changes:
      - spack-configs/perlmutter-e4s-${version}/${STACK_NAME}/spack.yaml
      - spack-configs/perlmutter-e4s-${version}/definitions.yaml
  trigger:
    include:
      - artifact: jobs_scratch_dir/pipeline.yml
        job: perlmutter-e4s-23.05-data-generate
    strategy: depend

perlmutter-e4s-23.05-tools-build:
  stage: build
  needs: ["perlmutter:check_spack_dependencies", "perlmutter-e4s-23.05-tools-generate"]
  allow_failure: true
  variables:
    version: "23.05"
    STACK_NAME: "tools"
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "PERLMUTTER_E4S_23.05")
    - if: ($CI_PIPELINE_SOURCE == "merge_request_event")
      changes:
      - spack-configs/perlmutter-e4s-${version}/${STACK_NAME}/spack.yaml
      - spack-configs/perlmutter-e4s-${version}/definitions.yaml
  trigger:
    include:
      - artifact: jobs_scratch_dir/pipeline.yml
        job: perlmutter-e4s-23.05-tools-generate
    strategy: depend

 #----------- E4S 22.11 ------------ #

perlmutter-e4s-22.11-gcc-generate:
  extends: .perlmutter-e4s-22.11-generate
  variables:
    STACK_NAME: gcc

perlmutter-e4s-22.11-cuda-generate:
  extends: .perlmutter-e4s-22.11-generate
  variables:
    STACK_NAME: cuda

perlmutter-e4s-22.11-cce-generate:
  extends: .perlmutter-e4s-22.11-generate
  variables:
    STACK_NAME: cce

perlmutter-e4s-22.11-nvhpc-generate:
  extends: .perlmutter-e4s-22.11-generate
  variables:
    STACK_NAME: nvhpc


perlmutter-e4s-22.11-gcc-build:
  stage: build
  needs: ["perlmutter:check_spack_dependencies", "perlmutter-e4s-22.11-gcc-generate"]
  allow_failure: true
  variables:
    version: "22.11"
    STACK_NAME: "gcc"
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "PERLMUTTER_E4S_22.11")
    - if: ($CI_PIPELINE_SOURCE == "merge_request_event")
      changes:
      - spack-configs/perlmutter-e4s-${version}/${STACK_NAME}/spack.yaml 
      - spack-configs/perlmutter-e4s-${version}/definitions.yaml
  trigger:
    include:
      - artifact: jobs_scratch_dir/pipeline.yml
        job: perlmutter-e4s-22.11-gcc-generate
    strategy: depend

perlmutter-e4s-22.11-nvhpc-build:
  stage: build
  needs: ["perlmutter:check_spack_dependencies", "perlmutter-e4s-22.11-nvhpc-generate"]
  allow_failure: true
  variables:
    version: "22.11"
    STACK_NAME: "nvhpc"
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "PERLMUTTER_E4S_22.11")
    - if: ($CI_PIPELINE_SOURCE == "merge_request_event") 
      changes:
      - spack-configs/perlmutter-e4s-${version}/${STACK_NAME}/spack.yaml 
      - spack-configs/perlmutter-e4s-${version}/definitions.yaml
  trigger:
    include:
      - artifact: jobs_scratch_dir/pipeline.yml
        job: perlmutter-e4s-22.11-nvhpc-generate
    strategy: depend


perlmutter-e4s-22.11-cuda-build:
  stage: build
  needs: ["perlmutter:check_spack_dependencies", "perlmutter-e4s-22.11-cuda-generate"]
  allow_failure: true
  variables:
    version: "22.11"
    STACK_NAME: "cuda"
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "PERLMUTTER_E4S_22.11")
    - if: ($CI_PIPELINE_SOURCE == "merge_request_event")
      changes:
      - spack-configs/perlmutter-e4s-${version}/${STACK_NAME}/spack.yaml 
      - spack-configs/perlmutter-e4s-${version}/definitions.yaml
  trigger:
    include:
      - artifact: jobs_scratch_dir/pipeline.yml
        job: perlmutter-e4s-22.11-cuda-generate
    strategy: depend


perlmutter-e4s-22.11-cce-build:
  stage: build
  needs: ["perlmutter:check_spack_dependencies", "perlmutter-e4s-22.11-cce-generate"]
  allow_failure: true
  variables:
    version: "22.11"
    STACK_NAME: "cce"
  rules:
    - if: ($CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web") && ($PIPELINE_NAME == "PERLMUTTER_E4S_22.11")
    - if: ($CI_PIPELINE_SOURCE == "merge_request_event") 
      changes:
      - spack-configs/perlmutter-e4s-${version}/${STACK_NAME}/spack.yaml 
      - spack-configs/perlmutter-e4s-${version}/definitions.yaml
  trigger:
    include:
      - artifact: jobs_scratch_dir/pipeline.yml
        job: perlmutter-e4s-22.11-cce-generate
    strategy: depend

## PRODUCTION PIPELINES BELOW

approve:
  stage: approve
  tags: [shell]
  needs: ["perlmutter:check_spack_dependencies"]
  rules:
    - if: $CI_PIPELINE_SOURCE == "web" && ($PIPELINE_NAME == "PERLMUTTER_E4S_22.11_DEPLOY" || $PIPELINE_NAME == "PERLMUTTER_E4S_23.05_DEPLOY" || $PIPELINE_NAME == "PERLMUTTER_E4S_23.08_DEPLOY" )
      when: manual
      allow_failure: false
  environment:
    name: production
  script:
    - echo Approval Granted, we will commence execution of production pipeline

perlmutter-e4s-22.11-prod:
  stage: deploy
  needs: ["perlmutter:check_spack_dependencies", "approve"]
  tags: [perlmutter-e4s]
  interruptible: true
  rules:
    - if: $CI_PIPELINE_SOURCE == "web" && $PIPELINE_NAME == "PERLMUTTER_E4S_22.11_DEPLOY"
  before_script:
    - *copy_perlmutter_settings
    - *startup_modules
  script:
    - set +e
    - source setup-env.sh
    - e4s_root=/global/common/software/spackecp/perlmutter/e4s-22.11/$CI_PIPELINE_ID
    - mkdir -p $e4s_root
    - cd $e4s_root
    - git clone -c feature.manyFiles=true -b e4s-22.11 $SPACK_REPO
    - . spack/share/spack/setup-env.sh
    - spack-python --path
    - export SPACK_GNUPGHOME=$HOME/.gnupg
    
    # add definitions to production spack.yamls
    - cat $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.11/definitions.yaml >> $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.11/prod/gcc/spack.yaml
    - cat $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.11/definitions.yaml >> $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.11/prod/cuda/spack.yaml
    - cat $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.11/definitions.yaml >> $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.11/prod/cce/spack.yaml
    - cat $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.11/definitions.yaml >> $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.11/prod/nvhpc/spack.yaml
    
    # gcc deployment
    - stack="gcc"
    - spack env create $stack $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.11/prod/$stack/spack.yaml
    - spack env activate $stack
    - spack install -y --show-log-on-error --cache-only
    - spack find
    - spack cd -e $stack

    # cce deployment
    - stack="cce"
    - spack env create $stack $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.11/prod/$stack/spack.yaml
    - spack env activate $stack
    - spack install -y --show-log-on-error --cache-only
    - spack find
    - spack cd -e $stack

    # nvhpc deployment
    - stack="nvhpc"
    - spack env create $stack $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.11/prod/$stack/spack.yaml
    - spack env activate $stack
    - spack install -y --show-log-on-error --cache-only
    - spack find
    - spack cd -e $stack

    # cuda deployment
    - stack="cuda"
    - spack env create $stack $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-22.11/prod/$stack/spack.yaml
    - spack env activate $stack
    - spack install -y --show-log-on-error --cache-only
    - spack find
    - spack cd -e $stack

    - cp $CI_PROJECT_DIR/spack_site_scope/perlmutter/22.05/config.yaml $SPACK_ROOT/etc/spack/config.yaml
    - cp $CI_PROJECT_DIR/spack_site_scope/perlmutter/22.05/modules.yaml $SPACK_ROOT/etc/spack/modules.yaml
    - spack -e gcc config get mirrors > $SPACK_ROOT/etc/spack/mirrors.yaml
    - cp $CI_PROJECT_DIR/spack_site_scope/spack-setup.sh $SPACK_ROOT/bin/spack-setup.sh
    - cp $CI_PROJECT_DIR/spack_site_scope/spack-setup.csh $SPACK_ROOT/bin/spack-setup.csh
    - chmod +x $SPACK_ROOT/bin/spack-setup.sh $SPACK_ROOT/bin/spack-setup.csh

perlmutter-e4s-23.05-prod:
  stage: deploy
  needs: ["perlmutter:check_spack_dependencies", "approve"]
  tags: [perlmutter-e4s]
  interruptible: true
  rules:
    - if: $CI_PIPELINE_SOURCE == "web" && $PIPELINE_NAME == "PERLMUTTER_E4S_23.05_DEPLOY"
  before_script:
    - *copy_perlmutter_settings
    - *startup_modules
  script:
    -  set +e
    -  source setup-env.sh
    -  e4s_root=/global/common/software/spackecp/perlmutter/e4s-23.05/$CI_PIPELINE_ID
    -  mkdir -p $e4s_root
    -  cd $e4s_root
    -  git clone -c feature.manyFiles=true -b e4s-23.05 $SPACK_REPO
    -  . spack/share/spack/setup-env.sh
    -  spack-python --path
    -  export SPACK_GNUPGHOME=$HOME/.gnupg    
    # add definitions to production spack.yamls
    -  definitions_file="$CI_PROJECT_DIR/spack-configs/perlmutter-e4s-23.05/definitions.yaml"


    # add definitions to production spack.yamls
    - cat $definitions_file >> $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-23.05/prod/gcc/spack.yaml
    - cat $definitions_file >> $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-23.05/prod/cuda/spack.yaml
    - cat $definitions_file >> $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-23.05/prod/cce/spack.yaml
    - cat $definitions_file >> $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-23.05/prod/nvhpc/spack.yaml
    - cat $definitions_file >> $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-23.05/prod/data/spack.yaml
    - cat $definitions_file >> $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-23.05/prod/math-libs/spack.yaml
    - cat $definitions_file >> $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-23.05/prod/tools/spack.yaml
    

    # gcc deployment
    - stack="gcc"
    - spack env create $stack $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-23.05/prod/$stack/spack.yaml
    - spack env activate $stack
    - spack install -y --show-log-on-error --cache-only
    - spack find
    - spack cd -e $stack

    # cce deployment
    - stack="cce"
    - spack env create $stack $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-23.05/prod/$stack/spack.yaml
    - spack env activate $stack
    - spack install -y --show-log-on-error --cache-only
    - spack find
    - spack cd -e $stack

    # nvhpc deployment
    - stack="nvhpc"
    - spack env create $stack $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-23.05/prod/$stack/spack.yaml
    - spack env activate $stack
    - spack install -y --show-log-on-error --cache-only
    - spack find
    - spack cd -e $stack

    # cuda deployment
    - stack="cuda"
    - spack env create $stack $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-23.05/prod/$stack/spack.yaml
    - spack env activate $stack
    - spack install -y --show-log-on-error --cache-only
    - spack find
    - spack cd -e $stack

    # math-libs deployment
    - stack="math-libs"
    - spack env create $stack $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-23.05/prod/$stack/spack.yaml
    - spack env activate $stack
    - spack install -y --show-log-on-error --cache-only
    - spack find
    - spack cd -e $stack

    # data deployment
    - stack="data"
    - spack env create $stack $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-23.05/prod/$stack/spack.yaml
    - spack env activate $stack
    - spack install -y --show-log-on-error --cache-only
    - spack find
    - spack cd -e $stack
    
    # data deployment
    - stack="tools"
    - spack env create $stack $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-23.05/prod/$stack/spack.yaml
    - spack env activate $stack
    - spack install -y --show-log-on-error --cache-only
    - spack find
    - spack cd -e $stack

    -  cp $CI_PROJECT_DIR/spack_site_scope/perlmutter/22.05/config.yaml $SPACK_ROOT/etc/spack/config.yaml
    -  cp $CI_PROJECT_DIR/spack_site_scope/perlmutter/22.05/modules.yaml $SPACK_ROOT/etc/spack/modules.yaml
    -  spack -e gcc config get mirrors > $SPACK_ROOT/etc/spack/mirrors.yaml
    -  cp $CI_PROJECT_DIR/spack_site_scope/spack-setup.sh $SPACK_ROOT/bin/spack-setup.sh
    -  cp $CI_PROJECT_DIR/spack_site_scope/spack-setup.csh $SPACK_ROOT/bin/spack-setup.csh
    -  chmod +x $SPACK_ROOT/bin/spack-setup.sh $SPACK_ROOT/bin/spack-setup.csh


perlmutter-e4s-23.08-prod:
  stage: deploy
  needs: ["perlmutter:check_spack_dependencies", "approve"]
  tags: [perlmutter-e4s]
  interruptible: true
  rules:
    - if: $CI_PIPELINE_SOURCE == "web" && $PIPELINE_NAME == "PERLMUTTER_E4S_23.08_DEPLOY"
  variables:
    version: "23.08"
  before_script:
    - *copy_perlmutter_settings
    - *startup_modules
  script:
    -  set +e
    -  source setup-env.sh
    -  e4s_root=/global/common/software/spackecp/perlmutter/e4s-${version}/$CI_PIPELINE_ID
    -  mkdir -p $e4s_root
    -  cd $e4s_root
    -  git clone -c feature.manyFiles=true -b e4s-${version} $SPACK_REPO
    -  . spack/share/spack/setup-env.sh
    -  spack-python --path
    -  export SPACK_GNUPGHOME=$HOME/.gnupg    
    # add definitions to production spack.yamls
    -  definitions_file="$CI_PROJECT_DIR/spack-configs/perlmutter-e4s-${version}/definitions.yaml"


    # add definitions to production spack.yamls
    - cat $definitions_file >> $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-${version}/prod/gcc/spack.yaml
    - cat $definitions_file >> $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-${version}/prod/cuda/spack.yaml
    - cat $definitions_file >> $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-${version}/prod/cce/spack.yaml
    - cat $definitions_file >> $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-${version}/prod/nvhpc/spack.yaml
    

    # gcc deployment
    - stack="gcc"
    - spack env create $stack $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-${version}/prod/$stack/spack.yaml
    - spack env activate $stack
    - spack env st
    - spack install -y --show-log-on-error --cache-only
    - spack find
    - spack env deactivate

    # cce deployment
    - stack="cce"
    - spack env create $stack $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-${version}/prod/$stack/spack.yaml
    - spack env activate $stack
    - spack env st
    - spack install -y --show-log-on-error --cache-only
    - spack find
    - spack env deactivate

    # nvhpc deployment
    - stack="nvhpc"
    - spack env create $stack $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-${version}/prod/$stack/spack.yaml
    - spack env activate $stack
    - spack env st
    - spack install -y --show-log-on-error --cache-only
    - spack find
    - spack env deactivate

    # cuda deployment
    - stack="cuda"
    - spack env create $stack $CI_PROJECT_DIR/spack-configs/perlmutter-e4s-${version}/prod/$stack/spack.yaml
    - spack env activate $stack
    - spack env st
    - spack install -y --show-log-on-error --cache-only
    - spack find
    - spack env deactivate

    -  cp $CI_PROJECT_DIR/spack_site_scope/perlmutter/22.05/config.yaml $SPACK_ROOT/etc/spack/config.yaml
    -  cp $CI_PROJECT_DIR/spack_site_scope/perlmutter/22.05/modules.yaml $SPACK_ROOT/etc/spack/modules.yaml
    -  spack -e gcc config get mirrors > $SPACK_ROOT/etc/spack/mirrors.yaml
    -  cp $CI_PROJECT_DIR/spack_site_scope/spack-setup.sh $SPACK_ROOT/bin/spack-setup.sh
    -  cp $CI_PROJECT_DIR/spack_site_scope/spack-setup.csh $SPACK_ROOT/bin/spack-setup.csh
    -  chmod +x $SPACK_ROOT/bin/spack-setup.sh $SPACK_ROOT/bin/spack-setup.csh